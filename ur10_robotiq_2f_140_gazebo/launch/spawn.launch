<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false" doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="robot_name" default="robot" doc="The name of the spawned model in gazebo. Must be unique across the world." />
  <arg name="tf_prefix" default="" doc="The tf prefix used by the robot_state_publisher." />
  <arg name="x" default="0.0" />
  <arg name="y" default="0.0" />
  <arg name="z" default="0.1" />
  <arg name="roll" default="0.0" />
  <arg name="pitch" default="0.0" />
  <arg name="yaw" default="0.0" />
  <arg name="shoulder_pan_joint" default="0.0" />
  <arg name="shoulder_lift_joint" default="0.0" />
  <arg name="elbow_joint" default="0.0" />
  <arg name="wrist_1_joint" default="0.0" />
  <arg name="wrist_2_joint" default="0.0" />
  <arg name="wrist_3_joint" default="0.0" />
  <arg name="left_finger_joint" default="0.0" />
  <arg name="right_finger_joint" default="0.0" />

  <!-- send robot urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur10_robotiq_2f_140_description)/urdf/ur10_robotiq_2f_140_robot.urdf.xacro' 
    limited:=$(arg limited) 
    arm_transmission_hw_interface:=hardware_interface/EffortJointInterface
    gripper_transmission_hw_interface:=hardware_interface/PositionJointInterface
    x:=$(arg x) y:=$(arg y) z:=$(arg z) roll:=$(arg roll) pitch:=$(arg pitch) yaw:=$(arg yaw)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="$(arg robot_name)_spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" 
    args="-urdf -param robot_description -model $(arg robot_name)
    -J shoulder_pan_joint $(arg shoulder_pan_joint)
    -J shoulder_lift_joint $(arg shoulder_lift_joint)
    -J elbow_joint $(arg elbow_joint)
    -J wrist_1_joint $(arg wrist_1_joint)
    -J wrist_2_joint $(arg wrist_2_joint)
    -J wrist_3_joint $(arg wrist_3_joint)
    -J left_finger_joint $(arg left_finger_joint)
    -J right_finger_joint $(arg right_finger_joint)" 
    respawn="false" output="screen" />

  <!-- controller parameters -->
  <rosparam file="$(find ur10_robotiq_2f_140_gazebo)/cfg/controllers.yaml" command="load"/>

  <!-- spawn controllers -->
  <node name="$(arg robot_name)_spawn_controllers" pkg="controller_manager" type="spawner" 
    args="
      arm_trajectory_controller
      gripper_trajectory_controller 
      joint_state_controller"
    respawn="false" output="screen" />

  <!-- load other controllers -->
  <node name="$(arg robot_name)_load_controllers" pkg="controller_manager" type="controller_manager" 
    args="load 
      shoulder_pan_joint_controller
      shoulder_lift_joint_controller
      elbow_joint_controller
      wrist_1_joint_controller
      wrist_2_joint_controller
      wrist_3_joint_controller
      left_finger_joint_controller
      right_finger_joint_controller"
    respawn="false" output="screen" />

  <!-- robot state publisher for tf -->
  <node name="$(arg robot_name)_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
  </node>

  <!-- fake calibration -->
  <node name="$(arg robot_name)_fake_joint_calibration" pkg="rostopic" type="rostopic"
        args="pub /calibrated std_msgs/Bool true" />

</launch>
